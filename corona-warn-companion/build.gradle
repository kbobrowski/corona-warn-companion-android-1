/*
 * Corona-Warn-Companion. An app that shows COVID-19 Exposure Notifications details.
 * Copyright (C) 2020  Michael Huebler <corona-warn-companion@tosl.org> and other contributors.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'com.gladed.androidgitversion' version '0.4.13'
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'

/* Get password from macOS Keychain */
def getPassword(String keyChain) {
    def stdout = new ByteArrayOutputStream()
    def stderr = new ByteArrayOutputStream()
    try {
        exec {
            commandLine 'security', '-q', 'find-generic-password', '-gl', keyChain
            standardOutput = stdout
            errorOutput = stderr
            ignoreExitValue true
        }
        return (stderr.toString().trim() =~ /password: "(.*)"/)[0][1]
    } catch (Exception e) {
        logger.warn("getting signing password failed, probably not running on macOS: ${e.getMessage()}")
        return 'dummy'
    }
}

android {
    signingConfigs {
        release {
            storeFile file(System.getProperty("user.home") + "/AndroidSigningKeystores/" + project.name)
            keyAlias 'upload'
            storePassword getPassword("ANDROID_STORE_PASSWORD")
            keyPassword getPassword("ANDROID_KEY_PASSWORD")
        }
    }
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
    flavorDimensions 'publication_version'
    productFlavors {
        github {
            dimension 'publication_version'
            applicationId 'org.tosl.coronawarncompanion'
            resValue "string", "app_name", "Corona-Warn-Companion"
            resValue "string", "about_name", "Corona-\\nWarn-\\nCompanion"
        }
        playstore {
            dimension 'publication_version'
            applicationId 'org.tosl.warnappcompanion'
            resValue "string", "app_name", "Warn-App-Companion"
            resValue "string", "about_name", "Warn-\\nApp-\\nCompanion"
        }
    }
}

repositories {
    maven { url 'https://jitpack.io' }  // required for com.github.PhilJay:MPAndroidChart and com.github.mh-:leveldb
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'
    //implementation 'io.github.pcmind:leveldb:1.2'  // versions > 0.9 conflict with minSdkVersion 23, e.g. because of java.lang.invoke.MethodHandle
    //noinspection GradleDependency
    implementation 'com.github.mh-:leveldb:1.2-android-minsdk23'  // created this to work with minSdkVersion 23
    implementation 'org.iq80.snappy:snappy:0.4'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation "io.noties.markwon:core:4.5.0"
    implementation "io.noties.markwon:image:4.5.0"
    implementation 'com.google.protobuf:protobuf-java:3.12.2'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
